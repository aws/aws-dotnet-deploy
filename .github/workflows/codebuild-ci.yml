name: AWS CodeBuild CI

on:
  # Manually trigger on specific branches
  workflow_dispatch: 
  push:
    branches:
      - dev
  pull_request:
    branches:
      - main
      - dev
      - 'feature/**'

permissions:
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@8c3f20df09ac63af7b3ae3d7c91f105f857d8497 #v4
        with:
          role-to-assume: ${{ secrets.CI_MAIN_TESTING_ACCOUNT_ROLE_ARN }}
          role-duration-seconds: 7200
          aws-region: us-west-2

      - name: Setup .NET Core 6.0
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x

      - name: Invoke Load Balancer Lambda
        id: lambda
        shell: pwsh
        run: |
          aws lambda invoke response.json --function-name "${{ secrets.CI_TESTING_LOAD_BALANCER_LAMBDA_NAME }}" --cli-binary-format raw-in-base64-out --payload '{\"Roles\": \"${{ secrets.CI_TEST_RUNNER_ACCOUNT_ROLES }}\", \"ProjectName\": \"${{ secrets.CI_TESTING_CODE_BUILD_PROJECT_NAME }}\", \"Branch\": \"${{ github.sha }}\"}'
          $roleArn=$(cat ./response.json)
          "roleArn=$($roleArn -replace '"', '')" >> $env:GITHUB_OUTPUT

      - name: Configure Test Runner Credentials
        uses: aws-actions/configure-aws-credentials@8c3f20df09ac63af7b3ae3d7c91f105f857d8497 #v4
        with:
          role-to-assume: ${{ steps.lambda.outputs.roleArn }}
          role-duration-seconds: 7200
          aws-region: us-west-2

      - name: Run CodeBuild
        id: codebuild
        uses: aws-actions/aws-codebuild-run-build@v1.0.3
        with:
          project-name: ${{ secrets.CI_TESTING_CODE_BUILD_PROJECT_NAME }}
          env-vars-for-codebuild: CODECOV_TOKEN
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: CodeBuild Link
        shell: pwsh
        run: |
          $buildId = "${{ steps.codebuild.outputs.aws-build-id }}"
          echo $buildId
