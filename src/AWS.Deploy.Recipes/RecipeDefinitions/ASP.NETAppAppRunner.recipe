{
    "$schema": "./aws-deploy-recipe-schema.json",
    "Id": "AspNetAppAppRunner",
    "Version": "0.1.0",
    "Name": "ASP.NET Core App to AWS App Runner",
    "DeploymentType": "CdkProject",
    "DeploymentBundle": "Container",
    "CdkProjectTemplate": "../CdkTemplates/AspNetAppAppRunner",
    "CdkProjectTemplateId": "netdeploy.AspNetAppAppRunner",
    "ShortDescription": "ASP.NET Core application deployed to AWS App Runner",
    "Description": "This ASP.NET Core application will be built as a container image and deployed to AWS App Runner. If your project does not contain a Dockerfile, it will be automatically generated. Recommended if you want to deploy your application as a container image on a fully managed environment.",
    "TargetService": "AWS App Runner",

    "DisplayedResources": [
        {
            "LogicalId": "RecipeAppRunnerServiceDA9A12DF",
            "Description": "Application Endpoint"
        }
    ],

    "RecipePriority": 105,
    "RecommendationRules": [
        {
            "Tests": [
                {
                    "Type": "MSProjectSdkAttribute",
                    "Condition": {
                        "Value": "Microsoft.NET.Sdk.Web"
                    }
                },
                {
                    "Type": "MSProperty",
                    "Condition": {
                        "PropertyName": "TargetFramework",
                        "AllowedValues": [ "netcoreapp2.1", "netcoreapp3.1", "net5.0", "net6.0" ]
                    }
                }
            ]
        },
        {
            "Tests": [
                {
                    "Type": "MSPropertyExists",
                    "Condition": {
                        "PropertyName": "AWSProjectType"
                    }
                }
            ],
            "Effect": {
                "Pass": { "Include": false },
                "Fail": { "Include": true }
            }
        }

    ],

    "OptionSettings": [
        {
            "Id": "ServiceName",
            "Name": "Service Name",
            "Description": "The name of the AWS App Runner service.",
            "Type": "String",
            "TypeHint": "AppRunnerService",
            "AdvancedSetting": false,
            "Updatable": false,
            "DefaultValue": "{StackName}-service",
            "Validators": [
                {
                    "ValidatorType": "Regex",
                    "Configuration": 
                    {
                        "Regex": "^([A-Za-z0-9][A-Za-z0-9_-]{3,39})$",
                        "ValidationFailedMessage": "Invalid service name. The service name must be between 4 and 40 characters in length and can contain uppercase and lowercase letters, numbers, hyphen(-) and underscore(_). It must start with a letter or a number."
                    }
                }
            ]
        },
        {
            "Id": "Port",
            "Name": "Port",
            "Description": "The port the container is listening for requests on.",
            "Type": "Int",
            "DefaultValue": 80,
            "AdvancedSetting": false,
            "Updatable": true,
            "Validators": [
                {
                    "ValidatorType": "Range",
                    "Configuration": 
                    {
                        "Min": 0,
                        "Max": 51200
                    }
                }
            ]
        },
        {
            "Id": "StartCommand",
            "Name": "Start Command",
            "Description": "Override the start command from the image's default start command.",
            "Type": "String",
            "AdvancedSetting": true,
            "Updatable": true
        },
        {
            "Id": "ApplicationIAMRole",
            "Name": "Application IAM Role",
            "Description": "The Identity and Access Management (IAM) role that provides AWS credentials to the application to access AWS services.",
            "Type": "Object",
            "TypeHint": "IAMRole",
            "TypeHintData": {
                "ServicePrincipal": "tasks.apprunner.amazonaws.com"
            },
            "AdvancedSetting": false,
            "Updatable": true,
            "ChildOptionSettings": [
                {
                    "Id": "CreateNew",
                    "Name": "Create New Role",
                    "Description": "Do you want to create a new role?",
                    "Type": "Bool",
                    "DefaultValue": true,
                    "AdvancedSetting": false,
                    "Updatable": true
                },
                {
                    "Id": "RoleArn",
                    "Name": "Existing Role ARN",
                    "Description": "The ARN of the existing role to use.",
                    "Type": "String",
                    "TypeHint": "ExistingIAMRole",
                    "TypeHintData": {
                        "ServicePrincipal": "tasks.apprunner.amazonaws.com"
                    },
                    "AdvancedSetting": false,
                    "Updatable": true,
                    "Validators": [
                        {
                            "ValidatorType": "Regex",
                            "Configuration": 
                            {
                                "Regex": "arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b):iam::[0-9]{12}:(role|role/service-role)/[\\w+=,.@\\-/]{1,1000}",
                                "AllowEmptyString": true,
                                "ValidationFailedMessage": "Invalid IAM Role ARN. The ARN should contain the arn:[PARTITION]:iam namespace, followed by the account ID, and then the resource path. For example - arn:aws:iam::123456789012:role/S3Access is a valid IAM Role ARN. For more information visit https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-authenticationconfiguration.html"
                            }
                        }
                    ],
                    "DependsOn": [
                        {
                            "Id": "ApplicationIAMRole.CreateNew",
                            "Value": false
                        }
                    ]
                }
            ]
        },
        {
            "Id": "ServiceAccessIAMRole",
            "Name": "Service Access IAM Role",
            "Description": "The Identity and Access Management (IAM) role that provides gives the AWS App Runner service access to pull the container image from ECR.",
            "Type": "Object",
            "TypeHint": "IAMRole",
            "TypeHintData": {
                "ServicePrincipal": "build.apprunner.amazonaws.com"
            },
            "AdvancedSetting": true,
            "Updatable": true,
            "ChildOptionSettings": [
                {
                    "Id": "CreateNew",
                    "Name": "Create New Role",
                    "Description": "Do you want to create a new role?",
                    "Type": "Bool",
                    "DefaultValue": true,
                    "AdvancedSetting": false,
                    "Updatable": true
                },
                {
                    "Id": "RoleArn",
                    "Name": "Existing Role ARN",
                    "Description": "The ARN of the existing role to use.",
                    "Type": "String",
                    "TypeHint": "ExistingIAMRole",
                    "TypeHintData": {
                        "ServicePrincipal": "build.apprunner.amazonaws.com"
                    },
                    "AdvancedSetting": false,
                    "Updatable": true,
                    "Validators": [
                        {
                            "ValidatorType": "Regex",
                            "Configuration": 
                            {
                                "Regex": "arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b):iam::[0-9]{12}:(role|role/service-role)/[\\w+=,.@\\-/]{1,1000}",
                                "AllowEmptyString": true,
                                "ValidationFailedMessage": "Invalid IAM Role ARN. The ARN should contain the arn:[PARTITION]:iam namespace, followed by the account ID, and then the resource path. For example - arn:aws:iam::123456789012:role/S3Access is a valid IAM Role ARN. For more information visit https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-authenticationconfiguration.html"
                            }
                        }
                    ],
                    "DependsOn": [
                        {
                            "Id": "ServiceAccessIAMRole.CreateNew",
                            "Value": false
                        }
                    ]
                }
            ]
        },
        {
            "Id": "Cpu",
            "Name": "CPU",
            "Description": "The number of CPU units reserved for each instance of your App Runner service.",
            "Type": "String",
            "AdvancedSetting": false,
            "Updatable": true,
            "DefaultValue": "1024",
            "AllowedValues": [
                "1024",
                "2048"
            ],
            "ValueMapping": {
                "1024": "1 vCPU",
                "2048": "2 vCPU"
            }
        },
        {
            "Id": "Memory",
            "Name": "Memory",
            "Description": "The amount of memory reserved for each instance of your App Runner service.",
            "Type": "String",
            "AdvancedSetting": false,
            "Updatable": true,
            "DefaultValue": "2048",
            "AllowedValues": [
                "2048",
                "3072",
                "4096"
            ],
            "ValueMapping": {
                "2048": "2 GB",
                "3072": "3 GB",
                "4096": "4 GB"
            }
        },
        {
            "Id": "EncryptionKmsKey",
            "Name": "Encryption KMS Key",
            "Description": "The ARN of the KMS key that's used for encryption of application logs.",
            "Type": "String",
            "AdvancedSetting": true,
            "Updatable": false,
            "Validators": [
                {
                    "ValidatorType": "Regex",
                    "Configuration": 
                    {
                        "Regex": "arn:aws(-[\\w]+)*:kms:[a-z\\-]+-[0-9]{1}:[0-9]{12}:key/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}",
                        "AllowEmptyString": true,
                        "ValidationFailedMessage": "Invalid KMS key ARN. The ARN should contain the arn:[PARTITION]:kms namespace, followed by the region, account ID, and then the key-id. For example - arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab is a valid KMS key ARN. For more information visit https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apprunner-service-encryptionconfiguration.html"
                    }
                }
            ]
        },
        {
            "Id": "HealthCheckProtocol",
            "Name": "Health Check Protocol",
            "Description": "The IP protocol that App Runner uses to perform health checks for your service.",
            "Type": "String",
            "DefaultValue": "TCP",
            "AdvancedSetting": true,
            "Updatable": true,
            "AllowedValues": [
                "HTTP",
                "TCP"
            ]
        },
        {
            "Id": "HealthCheckPath",
            "Name": "Health Check Path",
            "Description": "The URL that health check requests are sent to.",
            "Type": "String",
            "AdvancedSetting": true,
            "Updatable": true,
            "DependsOn": [
                {
                    "Id": "HealthCheckProtocol",
                    "Value": "HTTP"
                }
            ]
        },
        {
            "Id": "HealthCheckInterval",
            "Name": "Health Check Interval",
            "Description": "The time interval, in seconds, between health checks.",
            "Type": "Int",
            "DefaultValue": 5,
            "AdvancedSetting": true,
            "Updatable": true,
            "Validators": [
                {
                    "ValidatorType":"Range",
                    "Configuration": 
                    {
                        "Min": 1,
                        "Max": 20
                    }
                }
            ]
        },
        {
            "Id": "HealthCheckTimeout",
            "Name": "Health Check Timeout",
            "Description": "The time, in seconds, to wait for a health check response before deciding it failed.",
            "Type": "Int",
            "DefaultValue": 2,
            "AdvancedSetting": true,
            "Updatable": true,
            "Validators": [
                {
                    "ValidatorType":"Range",
                    "Configuration": 
                    {
                        "Min": 1,
                        "Max": 20
                    }
                }
            ]
        },
        {
            "Id": "HealthCheckHealthyThreshold",
            "Name": "Health Check Healthy Threshold",
            "Description": "The number of consecutive checks that must succeed before App Runner decides that the service is healthy.",
            "Type": "Int",
            "DefaultValue": 3,
            "AdvancedSetting": true,
            "Updatable": true,
            "Validators": [
                {
                    "ValidatorType":"Range",
                    "Configuration": 
                    {
                        "Min": 1,
                        "Max": 20
                    }
                }
            ]
        },
        {
            "Id": "HealthCheckUnhealthyThreshold",
            "Name": "Health Check Unhealthy Threshold",
            "Description": "The number of consecutive checks that must fail before App Runner decides that the service is unhealthy.",
            "Type": "Int",
            "DefaultValue": 3,
            "AdvancedSetting": true,
            "Updatable": true,
            "Validators": [
                {
                    "ValidatorType":"Range",
                    "Configuration": 
                    {
                        "Min": 1,
                        "Max": 20
                    }
                }
            ]
        }
    ]
}
